generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  firstName  String
  lastName   String
  email      String    @unique
  password   String
  birthDate  String
  gender     Gender?   @relation(fields: [genderId], references: [id])
  genderId   Int?
  avatarId   Int?
  avatar     Avatar?   @relation(fields: [avatarId], references: [id])
  posts      Post[]
  comment    Comment[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Gender {
  id     Int    @id @default(autoincrement())
  gender String
  users  User[]
}

model Avatar {
  id        Int     @id @default(autoincrement())
  avatar    String  @db.Text
  isProfile Boolean @default(false)
  userId    Int
  users     User[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String?   @db.Text
  imagePath  String?
  authorId   Int
  author     User      @relation(fields: [authorId], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  comment    Comment[]
}

model Comment {
  id        Int       @id @default(autoincrement())
  text      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  parentId  Int? // Self-referencing field to store the parent comment's ID
  postId    Int
  authorId  Int // Self-referencing field to store the
  author    User      @relation(fields: [authorId], references: [id])
  post      Post      @relation(fields: [postId], references: [id])
  parent    Comment?  @relation("ChildComments", fields: [parentId], references: [id])
  children  Comment[] @relation("ChildComments")
}
